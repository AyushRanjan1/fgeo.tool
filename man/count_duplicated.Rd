% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_duplicated.R
\name{count_duplicated}
\alias{count_duplicated}
\title{Count duplicated observations of a variable.}
\usage{
count_duplicated(x, ..., wt = NULL, sort = FALSE)
}
\arguments{
\item{x}{A dataframe.}

\item{...}{Variables to group by.}

\item{wt}{(Optional) If omitted (and no variable named \code{n} exists in the
data), will count the number of rows.
If specified, will perform a "weighted" tally by summing the
(non-missing) values of variable \code{wt}. A column named \code{n} (but not \code{nn} or
\code{nnn}) will be used as weighting variable by default in \code{tally()}, but not
in \code{count()}. This argument is automatically \link[rlang:quo]{quoted} and later
\link[rlang:eval_tidy]{evaluated} in the context of the data
frame. It supports \link[rlang:quasiquotation]{unquoting}. See
\code{vignette("programming")} for an introduction to these concepts.}

\item{sort}{if \code{TRUE} will sort output in descending order of \code{n}}
}
\value{
A dataframe.
}
\description{
This is a shortcut for \code{filter(count(x, ...) > 1)} (from the \strong{dplyr}
package) to count the number of observations of --specifically -- duplicated
observations of a variable. While this shortcut may be handy, it's best to
use \strong{dplyr}'s longer form because -- as \strong{dplyr} well known -- your code
will be more readable. So this function is mostly to help you discover the
more general way of solving this problem with \strong{dplyr}.
}
\details{
This function preserves \strong{dplyr}'s style and thus non-standard evaluation.
If #' you want to use it inside your own functions you should learn about
tidy eval (implemented via the \strong{rlang} package). A good place to start is
at \strong{dplyr}'s website.
}
\examples{
library(dplyr)
df <- data.frame(a = c(1, 2, 2, 3, 3, 3))
count_duplicated(df, a)
count_duplicated(df, a, sort = TRUE)

# Count duplicates is a short-hand for dplyr::count() + dplyr::filter()
count(df, a) \%>\% filter(n > 1)
}
\seealso{
\code{\link[dplyr:count]{dplyr::count()}}, \code{\link[dplyr:filter]{dplyr::filter()}}.
}
