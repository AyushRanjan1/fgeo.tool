% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_null_by_na.R
\name{replace_null_by_na}
\alias{replace_null_by_na}
\title{Replace literal 'NULL' (string) by \code{NA_character_} (missing value).}
\usage{
replace_null_by_na(x)
}
\arguments{
\item{x}{A dataframe or vector.}
}
\value{
A modified version of \code{x} with literals "NULL" replaced by
\code{NA_character_}.
}
\description{
Importing a dataset can be challenging. A common problem occurrs when reading
data a dataset with missing values encoded as 'NULL'. The problem is this:
When you read that dataset, R will interpret those missing values incorrectly
-- not as \code{NA} but as the literal string 'NULL'. This funciton sanitizes a
dataset by converting the literal string 'NULL' to the missing charecter
value \code{NA_character_}.
}
\details{
Instead of using this function, you should avoid missinterpreting 'NULL' in
the first place. You can pass 'NULL' to the argument \code{na} of the functions
\code{read_*()} of the \strong{readr} package (e.g. read_csv()). For example:\preformatted{readr::read_csv("your-file.csv", na = c("", "NA", "NULL"))
}

For more details on how to read data simply and safely see
\href{https://goo.gl/YDhgt6}{this blog post}.
}
\examples{
chr <- c("a", "NULL")
replace_null_by_na(chr)

dfm <- data.frame(
  a = c(1, 2, "NULL"), b = c(1, "NULL", 3), 
  stringsAsFactors = FALSE
)
dfm
replace_null_by_na(dfm)
}
