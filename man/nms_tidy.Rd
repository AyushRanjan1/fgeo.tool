% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nms_manipulate_names.R
\name{nms_tidy}
\alias{nms_tidy}
\alias{nms_tidy}
\title{Create tidy names that are lowercase and have no empty spaces.}
\usage{
nms_tidy(x)
}
\arguments{
\item{x}{A named object or a character string.}
}
\value{
A modified version of \code{x} with tidy names or a string of tidy names.
}
\description{
These functions create tidy names that are lowercase and have no empty
spaces. \code{nms_tidy()} tidies the names of named objects. Unnamed strings are
also tidied via \code{str_to_tidy_names()}. \code{str_to_tidy_names()} tidies a string -- not
its names.
}
\examples{
# Use str_to_tidy_names()
library(fgeo.base)

messy <- "Hi yOu"

# With unnamed strings, both functions do the same
unnamed_string <- messy
names(messy)
nms_tidy(messy)
# Same
str_to_tidy_names(messy)

# WHY TWO FUNCTIONS?

messy_named_string <- c(`Messy Name` = messy)
# Targets names
nms_tidy(messy_named_string)
# Targets strings -- not its names
str_to_tidy_names(messy_named_string)

# Same output, but here `str_to_tidy_names()` better communicates intention.
dfm <- data.frame(1)
setNames(dfm, nms_tidy(messy))
setNames(dfm, str_to_tidy_names(messy))

# Makes more sense when operating on strings
setNames(list(1), str_to_tidy_names(messy))
# Makes more sense when operating on named objects
messy_list <- list(`Hi yOu` = 1)
nms_tidy(messy_list)
}
