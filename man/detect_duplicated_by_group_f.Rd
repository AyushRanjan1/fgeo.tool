% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detect_duplicated_by_group.R
\name{detect_duplicated_by_group_f}
\alias{detect_duplicated_by_group_f}
\alias{detect_multiple_by_group_f}
\alias{flag_duplicated_by_group_f}
\alias{flag_multiple_by_group_f}
\title{Factories to detect and flag conditions on a variable by groups.}
\usage{
detect_duplicated_by_group_f(name)

detect_multiple_by_group_f(name)

flag_duplicated_by_group_f(name, cond = warn)

flag_multiple_by_group_f(name, cond = warn)
}
\value{
A function.
}
\description{
These funcions extend \code{\link[=detect_f]{detect_f()}} to work by groups defined with
\code{\link[dplyr:group_by]{dplyr::group_by()}}.
}
\section{Arguments to the resulting function}{

\itemize{
\item \code{.data}: A dataframe.
\item \code{msg}: String; an optional custom
message.
}
}

\examples{
tree <- tibble::tibble(CensusID = c(1, 2), treeID = c(1, 2))
detect_multiple_by_group_f("treeid")(tree)

# Case-insensitive
detect_multiple_by_group_f("treeid")(tree)
flag_multiple_by_group_f("treeID")(tree)

# Can also output messages and errors
flag_multiple_by_group_f("treeID", rlang::inform)(tree)

# Takes custom messages
flag_multiple_by_group_f("treeID")(tree, "Custom message")

# Handles grouped data
by_censusid <- group_by(tree, CensusID)
# Silent
flag_multiple_by_group_f("treeID")(by_censusid)

tree <- tibble::tibble(CensusID = c(1, 2), treeID = c(1, 1))
detect_duplicated_by_group_f("treeid")(tree)

by_censusid <- group_by(tree, CensusID)
# Silent
flag_duplicated_by_group_f("treeID")(by_censusid)
}
\seealso{
\code{\link[=detect_multiple_f]{detect_multiple_f()}}, \code{\link[=flag_multiple_f]{flag_multiple_f()}}, \code{\link[=detect_duplicated_f]{detect_duplicated_f()}},
\code{\link[=flag_duplicated_f]{flag_duplicated_f()}}.

Other functions for developers.: \code{\link{find_data_of_class}},
  \code{\link{nms_extract_anycase}},
  \code{\link{nms_lowercase}},
  \code{\link{nms_restore_newvar}}, \code{\link{nms_tidy}},
  \code{\link{nms_try_rename}}, \code{\link{nms}},
  \code{\link{type_ensure}}
}
\concept{function factories.}
\concept{functions for developers.}
\concept{functions to check inputs.}
\concept{predicates.}
